#+TITLE: Scrapyroo
#+AUTHOR: Dima Gerasimov
#+EMAIL: karlicoss@gmail.com
# #+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_ROOT: ./reveal.js-3.8.0
#+REVEAL_EXTRA_CSS: ./style-reveal.css
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="style.css" />
# #+REVEAL_TRANS: linear
#+REVEAL_SLIDE_FOOTER:  <div class='title'>Scrapy<font color='#b7410e'>r</font><font color='#00ccbc'>oo</font></div>
#+REVEAL_TITLE_SLIDE:    <h1 class='title'>Scrapy<font color='#b7410e'>r</font><font color='#00ccbc'>oo</font></h1>
#+REVEAL_TITLE_SLIDE: <h2 class='author'>%a</h2>
#+REVEAL_HEAD_PREAMBLE: <script src='hack-footer.js'></script>
# TODO wtf it looks a bit blurry in Firefox.. don't think font is the issue
#+REVEAL_HEAD_PREAMBLE: <link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro' rel='stylesheet' type='text/css'>

#+OPTIONS: toc:nil

#+BEGIN_NOTES
Hi, I'm Dima and today I'm gonna tell you about Scrapyroo, which is a tool I implemented to search over Deliveroo menus and make my life a bit easier.

Also just to make clear: I'm not employed by Deliveroo!
So it's not like I'm just pitching you the feature I implemented on my day job :P
#+END_NOTES

* Past Rust experience
Virtually none apart from some Project Euler.

#+BEGIN_NOTES
I wouldn't necessarily call it a project as I got away with not writing much of new Rust code.
(which is a good thing! Library I'm going to tell you about does deals with most of hard boring stuff)
But certainly this is my first proper interaction with the Rust ecosystem.

I am comfortable with many different other programming languages though and have been following Rust news.
#+END_NOTES


* Deliveroo is great!
  
- TODO some notes here?  

#+BEGIN_NOTES
Not sure if there are any Deliveroo employees here, but I want to thank you for a great product!

As a millenial/someone born in mid 90s, I am imagining life before services like Deliveroo and Uber as some sort of dark ages.

My older friends told be some dreadful stories. Apparently you'd browse through paper menus, have to phone call the operator and coordinate the courier?
#+END_NOTES

* The problem   
No full-text menu search :(

It's ok for getting *something* to eat, but not great when you know what you want to order.

** You can't find specific food!

- craving things
- varying your diet
- accomodating multiple people's prefs at the same time
   
#+BEGIN_NOTES
Craving: e.g. if you want some dessert you better get something you'd actually enjoy instead of mediocre one because that's what the restaurant offered.

Varying: I'm trying to expose myself to all kinds of food to make sure I'm not missing on some important nutrients.

Multiple people: say you want some ??? and your friend fancies ??? TODO need to use same example I'm about to use in demo
#+END_NOTES

** 
[[file:pic/categories.png]]

#+BEGIN_NOTES
Just to demonstrate what I'm talking about, here's the Deliveroo web interface (mobile looks similar).

You can filter by dietary restrictions, fair enough, but then finest you can do is to pick "Categories".

Some of them kinda make sense (e.g. "Bagels"), some of them are too broad (e.g. what is "Asian/American"? could be anything).
Some of them are just plain weird, like what is "Back to school" supposed to mean?

This is the best you're gonna get from Deliveroo.
#+END_NOTES

** 

[[file:pic/tabs.png]]
*** TODO quick demo maybe? not worth it..                          :noexport:

#+BEGIN_NOTES
 Say, you want some grilled tuna and green vegetables. 
 
 Best you can do is open all 15 places that serve fish in different tabs,
 Ctrl-F tuna and then try to decide among them.
#+END_NOTES

** Sad!
Full text search is a basic human right!     

#+BEGIN_NOTES
I asked people and that's apparently what they accept and never even questioned!  

It feels especially wrong to me because human brains are good at creativity.
Not so good at stuff like text search -- that's one of things computers are *exceptionally* good at and we're ought to exploit that.
#+END_NOTES  

*** TODO use some different meme? :noexport:

* What can we do?
  
# TODO FIXME diagram here?

- scrape menu data off Deliveroo website
  #+BEGIN_NOTES
  e.g. every day at 10 AM
  
  600 restaurants deliver to my postcode
  50Mb json file (TODO although lots of it is not so useful?)
  #+END_NOTES
- index data to allow for quick search
  #+BEGIN_NOTES
  Indexing needed mostly because I want

  - search operators
  - stemming, e.g. removing inflection, so there's no differensce, between 'grill and grilled'
  #+END_NOTES
- backend to serve indexed data 
- frontend to search in the data

** Scraping menus
Python ([[https://github.com/scrapy/scrapy][scrapy]]). Luckily, almost no need for HTML parsing!

[[file:pic/json.png]]

#+BEGIN_NOTES
Go to some restaurant, e.g.
https://deliveroo.co.uk/menu/london/spitalfields/tokyo-sushi-finsbury-park
open chrome inspector and type ~{"~ .  ~js-react-on-rails-context~ should be among the results.

If there are any Deliveroo developers here, sorry for public dissection!
#+END_NOTES

** Indexing menus & serving data

[[https://github.com/tantivy-search/tantivy][Tantivy]]!   

#+BEGIN_NOTES
I'm going to be explaining why it works well in the presentation.
#+END_NOTES

** Frontend
HTML and some Javascript/React

* Scrapyroo
  
(Live demo)
# TODO put a link here?
# TODO put a backup link to my online instnce

#+BEGIN_NOTES
- ui perhaps is a bit rough
- search as you type
  Demonstrate e.g. on mussels AND cheescake
- request to the index on almost every keystroke, wonder if we could benefit somehow?
  Demonstrate in dev tools
- works from phone as well as desktop browser
- debug
 
- TODO group query. mussels AND 'chicken salad'
  without full text search there is no way you would even find it
  TODO soup AND curry?


#+END_NOTES
** TODOs :noreveal:
*** TODO [#B] mm, too much data is transferred
 probably because of snippets

*** TODO [#A] make sure it runs on my laptop!!! 
    SCHEDULED: <2019-11-16 Sat>

*** TODO [#C] think which things should I demonstrate?

* Why Tantivy?

- initial [[https://lunrjs.com][lunrjs]] implementation was a bit slow on phone
- also, why not?

#+BEGIN_NOTES
Also need to carry data inside the huge html -- not that great.
Surprisingly, very few people use something like Dropbox!
Easier to demonstrate to other people and access from any computer. (TODO eh, although same would be with static html page)
#+END_NOTES

** TODO might be actually good to find out if there are any alternatives :noexport:

* Tantivy: enhancing
- TODO demonstrate lack of snippets with a checkbox?
- TODO explain how I added snippets, maybe with a bit of code? also explain issues with highlights?

* Tantivy: good
TODO move this slide earlier? First what's good/bad about tantivy and only later put the enhancing slide?

Features:
- highlight positions
- atomic index updates

TODO hmm actually it's not exactly true? CLI just takes last version of the searcher?
#+BEGIN_NOTES
https://github.com/tantivy-search/tantivy-cli/issues/17#issuecomment-316222907

Can be potentially hacked/hot swapped at least in CLI.
For now I'm just restarting it every night.
#+END_NOTES
- [[https://github.com/tantivy-search/tantivy-py][Python bindings]]

** 
- well documented, easy to modfy
- CLI: simply awesome
  #+BEGIN_NOTES
  Takes you from 0 to prototype in a matter of minutes without distracting on irrelevant stuff.
  #+END_NOTES

 
** TODO demonstrate how easy it is to index data and serve in CLI, in babel source block perhaps? :noexport:

* Tantivy: bad
- no nested document supports (yet)
TODO e.g. starter:dumpling AND main:salad
  #+BEGIN_NOTES
  Connecting search terms with AND is a bit awkward
  you can't return matched menu items only, have to index and serve whole menu.
  It's not so bad though, I'm relying on line breaks to display matched items.
  #+END_NOTES

  
* Rust observations
- cargo makes it *very* easy to change dependency to local

#+BEGIN_NOTES
(a bit random observations?)

There is tantivy, tantivy-cli and tantivy-py.

I was experimenting with exposing this snippet API from tantivy so needed to change dependency 

E.g. as opposed to Python (messing with PYTHONPATH, pipenv?)
#+END_NOTES

- single binary -- very easy to deploy
#+BEGIN_NOTES
Especially to VPS, which only (huh!) got two cores and wouldn't handle compiling Rust well
#+END_NOTES

- musl -- way simpler than I imagined!
TODO mention that it's a minimal libc (important for standalone!)

- python library -- surprisingly simple integration?  
- TODO unicode thing
- TODO serde/derive Serialize?
 orphan rule
TODO just remove this
- TODO trait thing?
- TODO demonstrate how it's easy to use cargo install and point at specific branch/tag
  disclaimer -- it's not the same verions of Tantivy that's in master and it's a great thing!
  I managed to run this with the minimal effort.
  
* Contributions back  
Pull requests in progress!
- exposing snippets
- simple React sandbox to interact with CLI backend and make running even easier
TODO demonstrate cli command?
  
#+BEGIN_NOTES
returning html isn't gonna work well, you'd want to restyle it
#+END_NOTES  

* Why python scripts?

- interactive
- easy to mess with data

Happy to be proven otherwise, but would be surprised!
 
#+BEGIN_NOTES
Basically it's good to keep json data externally in case indexing fails or something.

Easy to mess with jq

#+END_NOTES


* Details
** TODO how are scores calculated?


* Outtakes  
- TODO rust, tantivy
- discovered places I'd have never found otherwise
- my life is simpler now!
  don't have to browse through the website
- you don't have to suffer from inconvenience in your life   

#+BEGIN_NOTES
You can program.
You are literally capable of anything you can think of and can bend the interactions with the outside world the way you want.
#+END_NOTES  

* TODO Credits
  
* Questions?


* TODO  reveal help :noexport:
- https://github.com/yjwen/org-reveal
- http://jr0cket.co.uk/2013/10/create-cool-slides--Org-mode-Revealjs.html.html
- http://jr0cket.co.uk/2017/03/org-mode-driven-presentations-with-org-reveal-spacemacs.html

* TODO x                                                           :noexport:
** ok, font sucks a bit?

   
** TODO speaker notes
*** Heading 1
     Some contents.
  #+BEGIN_NOTES
    Enter speaker notes here.
  #+END_NOTES

  To skip exporting speaker notes, please set variable `org-reveal-ignore-speaker-notes` to `t`.

** TODO use local reveal copy http://jr0cket.co.uk/2017/03/org-mode-driven-presentations-with-org-reveal-spacemacs.html
** TODO [2019-11-15 Fri 22:43] hmm nice could just publish my presentation with notes as a post?
** TODO [#D] very easy to use local dependency (just point to direcory) when I wanted to hack tantivy :rust:scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-10-13 Sun 23:30]
   :END:

** STRT [#B] notes and log                                        :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-10 Sun 16:17]
   :END:
 :LOGBOOK:
 - State "STRT"       from              [2019-11-10 Sun 20:17]
 :END:

 Weird, snippets return single word highlights even for phrase searches: e.g. "duck soup"

 interesting feature could be breaking down query (e.g. "Duck Soup" OR "Duck Salad" but maybe it's overkill
*** [2019-11-10 Sun 20:17] mm, first attempt was just 
 TODO perhaps split by endlines?
 maybe what I want it hierarchical documents (or what's it called??)
*** [2019-11-10 Sun 22:06] right, apparently default stemming in tantivy is en_ already?
**** [2019-11-10 Sun 22:06] could add to caveats or something?
*** [2019-11-10 Sun 22:48] very nice thing about tantivy is that you can have a fully functional (perhaps even production grade!) search backend in a matter of minutes
 with a simple python script or even some jq 
 easy to debug via httpie/whatever?
*** TODO [2019-11-10 Sun 23:06] would be also nice to add a simple react search thing for easy kickoff?
*** TODO [2019-11-10 Sun 23:02] handle that fish AND salad -"fish cake"
*** TODO [2019-11-10 Sun 23:13] example: fish AND salad -- demonstrate k
*** TODO [2019-11-10 Sun 23:17] demonstrate how fast it is by doing incremental search in react
**** [2019-11-10 Sun 23:17] could also use some rust profiling tools for that and quick calculation; compute some latency
*** TODO [2019-11-10 Sun 23:18] scrape a bigger chunk 
*** TODO [2019-11-10 Sun 23:21] how to refresh index? I guess need to do it in a single transaction
*** TODO [2019-11-11 Mon 00:11] my VPS is running bionic and I was getting ./tantivy-cli: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by ./tantivy-cli
    cross compiling? or musl?
   
    whoops?
    /L/coding/tantivy-cli  ↵ SIGINT(2)  cargo build --target x86_64-unknown-linux-musl
    Compiling log v0.4.7
    Compiling matches v0.1.8
    Compiling cfg-if v0.1.9
    Compiling autocfg v0.1.5
    Compiling smallvec v0.6.10
    Compiling libc v0.2.60
    Compiling proc-macro2 v0.4.30
    Compiling version_check v0.1.5
    error[E0463]: can't find crate for `core`
   = note: the `x86_64-unknown-linux-musl` target may not be installed

   rustup target add x86_64-unknown-linux-musl && sudo apt install musl-tools
   and it works!
  
 honestly I find it hard appreciate because it's something that was ought to be there in the first place! But rust somehow managed to get it all right
*** TODO [2019-11-11 Mon 00:32] demonstrace -rice or something?
*** TODO [2019-11-11 Mon 00:32] I guess ideally you want to have an operator that works like AND but matches against separate menu items. I'm not sure if it's really possible to achieve..
*** TODO [2019-11-11 Mon 00:33] with wasm, could be fucking awesome if it could suck in jsons once from the backend and then you wouldn't need to do extra queries
*** TODO [2019-11-11 Mon 00:36] ugh
 A selection of tandoori chicken, chicken tikka, Iamb tikka, sheek kebab, tandoori king prawn served with green salad12.
 then baked in the clay oven and wrapped with naan bread. Served with <span class='highlight'>salad</span><sup class='snippet snippet_13 nodebug'>13</sup> and red sauce.	undefined
 undefined
 <span class='highlight'>salad</span><sup class='snippet snippet_14 nodebug'>14</sup> and mint sauce.

** TODO would be nice to have a JS query verifier?                :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-11 Mon 23:09]
   :END:

** TODO hmm, tell about python bindings and debug method?         :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-14 Thu 18:50]
   :END:
*** [2019-11-14 Thu 18:52] I guess demonstrate specific snippets along with imports?

    
** TODO motivation: I'm not sure how the categories are curated, but I found them not to correspond to the menus :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-14 Thu 19:19]
   :END:

 e.g. looking for sardines
 https://deliveroo.co.uk/menu/london/bethnal-green/laxeiro-tapas-bar-ltd

** TODO motivation: mussels AND cheesecake                        :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-14 Thu 19:24]
   :END:
** TODO Fish and cheesecake. Weird combo, but I don't flollow made up society rules :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-12 Tue 09:35]
   :END:
** TODO It is ok to employ someone to search for you, but not too implement the search yourself? I'd say the former feels wrong :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-12 Tue 09:44]
   :END:

** TODO Tantivy could even have static html in addition to serve API? :scrapyroo:
   :PROPERTIES:
   :CREATED:  [2019-11-12 Tue 00:37]
   :END:


* TODO Ispell                                                      :noexport:
